{"name":"Waapisim","tagline":"Web Audio API Simulator for Firefox/MSIE/Opera","body":"# WAAPISim : Web Audio API Simulator\r\n\r\nWAAPISim is a browser's 'Web Audio API' polyfill fallbacking to Firefox's 'Audio Data API' or Flash for MSIE/Opera.\r\n\r\nWAAPISim automatically check the availability of APIs:  \r\nWebAudioAPI => AudioDataAPI => Flash\r\n\r\n**<http://www.g200kg.com/docs/waapisim/>**\r\n\r\n\r\n## Current Status\r\n\r\nWAAPISim is still not completed. It is tentative and partial implementation.\r\n\r\n* Number of channels in each nodes should be 1 (mono) or 2(stereo)\r\n* OscillatorNode / ChannelSplitterNode / ChannelMergerNode / AudioBufferSourceNode / WaveShaperNode / AnalyserNode / GainNode / BiquadFilterNode / DelayNode : implemented\r\n* DynamicsCompressorNode : Implemented but has a little different characteristics from Chrome's implements.\r\n* PannerNode : Simplified. Listener position should stay default. Source positions are interpreted as x-z 2d coordinate\r\n* ScriptProcessorNode : Implemented. Input buffer size should be 1024 and under (No limitation if use output only)\r\n* ConvolverNode : By performance reason, convolution is executed for only IR's first 1000 samples. Sebsequent part will be replaced as simple delays.\r\n* createBuffer from ArrayBuffer supports only .wav format\r\n* k-rate AudioParam controls are executed only per 1024 samples frequency. a-rate AudioParams are controlled by sample.\r\n\r\n## Usage\r\n\r\nLoad the 'waapisim.js' before using the Web Audio API functions in your script.\r\n\r\n`<script type=\"text/javascript\" src=\"waapisim.js\"></script>`\r\n\r\nTo enable fallbacking to Flash, place the 'waapisim.swf' file to same folder as 'waapisim.js'.\r\n\r\n## License\r\nCopyright (c) 2013 g200kg  \r\n<http://www.g200kg.com/>  \r\nReleased under the MIT License","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}